{"version":3,"sources":["components/Header.js","components/Footernav.js","Icons/Icon.js","components/Navheader.js","components/Presentation.js","App.js","reportWebVitals.js","index.js"],"names":["Header","nav","className","href","Footernav","useStyles","makeStyles","theme","root","margin","spacing","width","Basic","formik","useFormik","initialValues","firstName","lastName","email","onSubmit","values","alert","JSON","stringify","classes","handleSubmit","noValidate","autoComplete","TextField","id","label","variant","color","onChange","handleChange","value","Navheader","Presentation","useState","show","setshwow","onClick","Button","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAWeA,ICNXC,EAAK,sBAAKC,UAAU,YAAf,UACD,qBAAKA,UAAU,QAAf,SAAuB,mBAAGC,KAAK,IAAR,uBACvB,qBAAKD,UAAU,QAAf,SAAuB,mBAAGC,KAAK,IAAR,2BACvB,qBAAKD,UAAU,QAAf,SAAuB,mBAAGC,KAAK,IAAR,uBACvB,qBAAKD,UAAU,QAAf,SAAuB,mBAAGC,KAAK,IAAR,sBAWhBC,MARf,WACI,OACI,mCACCH,K,kCCVHI,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJ,QAAS,CACPC,OAAQF,EAAMG,QAAQ,GACtBC,MAAO,aAoCAC,EA7BD,WAKZ,IAAMC,EAASC,YAAU,CACvBC,cAAe,CACbC,UAAW,GACXC,SAAU,GACVC,MAAO,IAETC,SAAU,SAAAC,GACRC,MAAMC,KAAKC,UAAUH,EAAQ,KAAM,OAGjCI,EAAUnB,IAChB,OACE,sBAAMc,SAAUN,EAAOY,aAAcvB,UAAWsB,EAAQhB,KAAMkB,YAAU,EAACC,aAAa,MAAtF,SACE,cAACC,EAAA,EAAD,CACEC,GAAG,qBACHC,MAAM,qBACNC,QAAQ,WACRC,MAAM,YACNC,SAAUpB,EAAOqB,aACjBC,MAAOtB,EAAOO,OAAOH,cC3BdmB,MAXf,WACI,OACI,sBAAKlC,UAAU,qBAAf,UACI,qBAAKA,UAAU,gBAAf,qBACA,qBAAKA,UAAU,oBAAf,yBACA,qBAAKA,UAAU,sBAAf,iBACA,qBAAKA,UAAU,qBAAf,yB,0BCiCGmC,MAnCf,WACI,MAAuBC,oBAAS,GAAhC,mBAAOC,EAAP,KAAaC,EAAb,KAGA,OACI,qCAEQD,EAAK,qBAAKrC,UAAU,mBAAf,SACD,sBAAKA,UAAU,cAAf,UACI,qBAAKA,UAAU,OAAf,SACI,cAAC,IAAD,CAAWuC,QAAS,kBAAID,GAAS,IAAQtC,UAAU,YAEvD,qBAAKA,UAAU,QAAf,SACI,cAAC,EAAD,WAGL,KAEf,0BAASA,UAAU,sBAAnB,UACI,cAAC,EAAD,IACA,sBAAKA,UAAU,eAAf,UACA,sBAAKA,UAAU,QAAf,UACI,6CACM,uBADN,kBAC8B,uBAD9B,6BAC8D,uBAD9D,kDAGA,cAACwC,EAAA,EAAD,CAAQxC,UAAU,mBAAmB6B,QAAQ,YAAYC,MAAM,SAASS,QAAS,kBAAID,GAAS,IAA9F,wBACA,cAACE,EAAA,EAAD,CAAQX,QAAQ,YAAYC,MAAM,UAAU9B,UAAU,mBAAtD,yCAEJ,qBAAKA,UAAU,QAAf,6BCdGyC,MAff,WACE,OACE,qCACG,cAAC,EAAD,IACA,0CACA,0CACA,0CACA,0CACA,0CAED,cAAC,EAAD,QCHSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.81a02112.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Header() {\r\n    return (\r\n        <header class=\"l-header\">\r\n            <div>tel</div>\r\n            <div>mail</div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\n\r\n\r\n\r\nlet nav =<div className=\"container\">\r\n        <div className=\"item1\"><a href=\"#\">Accueil</a></div>\r\n        <div className=\"item1\"><a href=\"#\">Mes service</a></div>\r\n        <div className=\"item1\"><a href=\"#\">Contact</a></div>\r\n        <div className=\"item1\"><a href=\"#\">Moi</a></div>\r\n    </div>\r\n\r\nfunction Footernav() {\r\n    return (\r\n        <>\r\n        {nav}    \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footernav\r\n","\r\nimport React from 'react';\r\nimport { useFormik } from 'formik';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      },\r\n    },\r\n  }));\r\n\r\n \r\n \r\nconst Basic = () => {\r\n  // Note that we have to initialize ALL of fields with values. These\r\n  // could come from props, but since we don’t want to prefill this form,\r\n  // we just use an empty string. If we don’t do this, React will yell\r\n  // at us.\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      firstName: '',\r\n      lastName: '',\r\n      email: '',\r\n    },\r\n    onSubmit: values => {\r\n      alert(JSON.stringify(values, null, 2));\r\n    },\r\n  });\r\n  const classes = useStyles();\r\n  return (\r\n    <form onSubmit={formik.handleSubmit} className={classes.root} noValidate autoComplete=\"off\">\r\n      <TextField\r\n        id=\"outlined-secondary\"\r\n        label=\"Outlined secondary\"\r\n        variant=\"outlined\"\r\n        color=\"secondary\"\r\n        onChange={formik.handleChange}\r\n        value={formik.values.lastName}\r\n      />\r\n    </form>\r\n  );\r\n}\r\nexport default Basic;","import React from 'react'\r\n\r\nfunction Navheader() {\r\n    return (\r\n        <div className=\"containernavheader\">\r\n            <div className=\"navheaderitem\">Accueil</div>\r\n            <div className=\"navheaderitem two\">Mes service</div>\r\n            <div className=\"navheaderitem three\">Moi</div>\r\n            <div className=\"navheaderitem four\">Contact</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navheader\r\n","import {React, useState} from 'react'\r\nimport Basic from '../Icons/Icon'\r\nimport Navheader from './Navheader'\r\nimport Button from '@material-ui/core/Button';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nfunction Presentation() {\r\n    const [show, setshwow]=useState(false)\r\n    /*---------FORMULAIRE DE CONTACT------------*/\r\n\r\n    return (\r\n        <>\r\n            {\r\n                show?<div className='containercontact'>\r\n                    <div className=\"itemcontact\">\r\n                        <div className='icon'>\r\n                            <CloseIcon onClick={()=>setshwow(false)} className=\"close\"/>\r\n                        </div>\r\n                        <div className=\"item3\">\r\n                            <Basic />\r\n                        </div>\r\n                    </div>\r\n                </div>:null\r\n              }\r\n        <section className=\"Presentationsection\">\r\n            <Navheader />\r\n            <div className=\"Presentation\">\r\n            <div className=\"item2\">\r\n                <article>\r\n                Hello,<br></br>Je suis CHidiac<br></br>Administrateur Réseaux <br></br> développeur freelance à temps partiel\r\n                </article>\r\n                <Button className=\"buttpresentation\" variant=\"contained\" color=\"F48C06\" onClick={()=>setshwow(true)}>Contact me</Button>\r\n                <Button variant=\"contained\" color=\"#F48C06\" className=\"buttpresentation\">Télécharger mon CV</Button>\r\n            </div>\r\n            <div className=\"item2\">Photo</div>\r\n            </div>\r\n        </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Presentation\r\n","import './App.css';\nimport Header from \"./components/Header\";\nimport Footernav from \"./components/Footernav\"\nimport Presentation from './components/Presentation'\nimport {react, useState} from \"react\"\nfunction App() {\n  return (\n    <>\n       <Presentation />\n       <p>hdshomdfh</p>\n       <p>hdshomdfh</p>\n       <p>hdshomdfh</p>\n       <p>hdshomdfh</p>\n       <p>hdshomdfh</p>\n      \n      <Footernav />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}